
    MAILBOX = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    FRIENDS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    SETTINGS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    WISH = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    BATTLE_PASS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    SHOP = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    ACHIEVEMENTS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    COOP = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    WEAPONS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    ARTIFACTS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    DEVELOPMENT = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    FOOD = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    MATERIALS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    GADGET = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    QUEST_ITEMS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    PRECIOUS_ITEMS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    FURNISHINGS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    CHARACTER_ARCHIVE = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    WORLD_QUESTS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    COMMISSION_QUESTS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    STORY_QUESTS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    ARCHON_QUESTS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    IN_PROGRESS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    HANGOUT_EVENT = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    CUTSCENE = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """ 
    TUTORIAL_ALL = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    TUTORIAL_ELEMENTS = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    TUTORIAL_ENEMIES = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    TUTORIAL_SYSTEM = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
    TUTORIAL_ADVENTURE = auto()
    """
    Idle activity.
    activity_data: previous non-idle `Activity` object.
    """
######################################
            


	    case ActivityType.MAILBOX:
                return {
                    "state": "Looking at the Mailbox",
                    "large_image": "icon_mailbox",
                }
            case ActivityType.FRIENDS:
                return {
                    "state": "Looking at their Friend List",
                    "large_image": "icon_friends",
                }                
            case ActivityType.SETTINGS:
                return {
                    "state": "Looking at the Settings",
                    "large_image": "icon_settings",
                }               
            case ActivityType.WISH:
                return {
                    "state": "Wishing Upon a Star",
                    "large_image": "icon_wish",
                }                
            case ActivityType.BATTLE_PASS:
                return {
                    "state": "Looking at the Battle Pass/Gnostic Hymn",
                    "large_image": "icon_battle_pass",
                }               
            case ActivityType.SHOP:
                return {
                    "state": "Looking at the Shop",
                    "large_image": "icon_shop",
                }                
            case ActivityType.ACHIEVEMENTS:
                return {
                    "state": "Looking at their hard earned Achievements",
                    "large_image": "icon_achievements",
                }
            case ActivityType.COOP:
                return {
                    "state": "On the Co-op Menu",
                    "large_image": "icon_coop",
                }
            case ActivityType.WEAPONS:
                return {
                    "state": "Looking at their Weapons",
                    "large_image": "icon_weapon",
                }
            case ActivityType.ARTIFACTS:
                return {
                    "state": "Looking at their Artifacts",
                    "large_image": "icon_artifact",
                }
            case ActivityType.DEVELOPMENT:
                return {
                    "state": "Looking at their Character Development Items",
                    "large_image": "icon_development",
                }
            case ActivityType.FOOD:
                return {
                    "state": "Looking at their Food Stock",
                    "large_image": "icon_food",
                } 
            case ActivityType.MATERIALS:
                return {
                    "state": "Looking at their Materials",
                    "large_image": "icon_materials",
                }
            case ActivityType.GADGET:
                return {
                    "state": "Looking at their Gadgets",
                    "large_image": "icon_gadget",
                }
            case ActivityType.QUEST_ITEMS:
                return {
                    "state": "Looking at their Quest Items",
                    "large_image": "icon_quest_item",
                }
            case ActivityType.PRECIOUS_ITEMS:
                return {
                    "state": "Looking at their Precious Items",
                    "large_image": "icon_precious_items",
                }
            case ActivityType.FURNISHINGS:
                return {
                    "state": "Looking at their Furnishings",
                    "large_image": "icon_furnishing",
                }
            case ActivityType.CHARACTER_ARCHIVE:
                return {
                    "state": "Looking at the Character Archives",
                    "large_image": "icon_character_archive",
                }
            case ActivityType.WORLD_QUESTS:
                return {
                    "state": "Looking at the World Quests",
                    "large_image": "icon_world_quest",
                }
            case ActivityType.COMMISSION_QUESTS:
                return {
                    "state": "Looking at the Commission Quests",
                    "large_image": "icon_commission_quest",
                }
            case ActivityType.STORY_QUESTS:
                return {
                    "state": "Looking at the Story Quests",
                    "large_image": "icon_story_quest",
                }
            case ActivityType.ARCHON_QUESTS:
                return {
                    "state": "Looking at the Archon Quests",
                    "large_image": "icon_archon_quest",
                }
            case ActivityType.IN_PROGRESS:
                return {
                    "state": "Looking at their Current Quests",
                    "large_image": "icon_current_quest",
                }
            case ActivityType.HANGOUT_EVENT:
                return {
                    "state": "Looking at the Hangout Events",
                    "large_image": "icon_hangout",
                }
            case ActivityType.CUTSCENE:
                return {
                    "state": "Currently in a Cutscene",
                    "large_image": "icon_cutscene",
                }
            case ActivityType.TUTORIAL_ALL:
                return {
                    "state": "Looking at All the Tutorials",
                    "large_image": "icon_tutorial",
                }
            case ActivityType.TUTORIAL_ELEMENTS:
                return {
                    "state": "Looking at the Element Tutorials",
                    "large_image": "icon_tutorial",
                }
            case ActivityType.TUTORIAL_ENEMIES:
                return {
                    "state": "Looking at the Enemy Tutorials",
                    "large_image": "icon_tutorial",
                }
            case ActivityType.TUTORIAL_SYSTEM:
                return {
                    "state": "Looking at the System Tutorials",
                    "large_image": "icon_tutorial",
                }
            case ActivityType.TUTORIAL_ADVENTURE:
                return {
                    "state": "Looking at the Adventure Tutorials",
                    "large_image": "icon_tutorial",
                }
                
################################

            if "mailbox" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.MAILBOX
                if current_activity.activity_type != ActivityType.MAILBOX:
                    current_activity = Activity(
                        ActivityType.MAILBOX, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at Mailbox")
            if "friends" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.FRIENDS
                if current_activity.activity_type != ActivityType.FRIENDS:
                    current_activity = Activity(
                        ActivityType.FRIENDS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Friend List")
            if "settings" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.SETTINGS
                if current_activity.activity_type != ActivityType.SETTINGS:
                    current_activity = Activity(
                        ActivityType.SETTINGS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Settings")
            if "wish" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.WISH
                if current_activity.activity_type != ActivityType.WISH:
                    current_activity = Activity(
                        ActivityType.WISH, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Wishing Upon a Star")
            if "battle pass" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.BATTLE_PASS
                if current_activity.activity_type != ActivityType.BATTLE_PASS:
                    current_activity = Activity(
                        ActivityType.BATTLE_PASS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Battle Pass/Gnostic Hymn")
            if "shop" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.SHOP
                if current_activity.activity_type != ActivityType.SHOP:
                    current_activity = Activity(
                        ActivityType.SHOP, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Shop")
            if "achievements" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.ACHIEVEMENTS
                if current_activity.activity_type != ActivityType.ACHIEVEMENTS:
                    current_activity = Activity(
                        ActivityType.ACHIEVEMENTS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their hard earned Achievements")
            if "co op" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.COOP
                if current_activity.activity_type != ActivityType.COOP:
                    current_activity = Activity(
                        ActivityType.COOP, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"On the Co-op Menu")
            if "weapons" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.WEAPONS
                if current_activity.activity_type != ActivityType.WEAPONS:
                    current_activity = Activity(
                        ActivityType.WEAPONS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Weapons")
            if "artifacts" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.ARTIFACTS
                if current_activity.activity_type != ActivityType.ARTIFACTS:
                    current_activity = Activity(
                        ActivityType.ARTIFACTS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Artifacts")
            if "development" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.DEVELOPMENT
                if current_activity.activity_type != ActivityType.DEVELOPMENT:
                    current_activity = Activity(
                        ActivityType.DEVELOPMENT, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Character Development Items")
            if "food" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.FOOD
                if current_activity.activity_type != ActivityType.FOOD:
                    current_activity = Activity(
                        ActivityType.FOOD, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Food Stock")
            if "materials" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.MATERIALS
                if current_activity.activity_type != ActivityType.MATERIALS:
                    current_activity = Activity(
                        ActivityType.MATERIALS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Materials")
            if "gadget" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.GADGET
                if current_activity.activity_type != ActivityType.GADGET:
                    current_activity = Activity(
                        ActivityType.GADGET, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Gadgets")
            if "quest" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.QUEST_ITEMS
                if current_activity.activity_type != ActivityType.QUEST_ITEMS:
                    current_activity = Activity(
                        ActivityType.QUEST_ITEMS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Quest Items")
            if "precious items" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.PRECIOUS_ITEMS
                if current_activity.activity_type != ActivityType.PRECIOUS_ITEMS:
                    current_activity = Activity(
                        ActivityType.PRECIOUS_ITEMS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Precious Items")
            if "furnishing" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.FURNISHINGS
                if current_activity.activity_type != ActivityType.FURNISHINGS:
                    current_activity = Activity(
                        ActivityType.FURNISHINGS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Furnishings")
            if "archive" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.CHARACTER_ARCHIVE
                if current_activity.activity_type != ActivityType.CHARACTER_ARCHIVE:
                    current_activity = Activity(
                        ActivityType.CHARACTER_ARCHIVE, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Character Archives")
            if "world quests" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.WORLD_QUESTS
                if current_activity.activity_type != ActivityType.WORLD_QUESTS:
                    current_activity = Activity(
                        ActivityType.WORLD_QUESTS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the World Quests")
            if "commission quests" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.COMMISSION_QUESTS
                if current_activity.activity_type != ActivityType.COMMISSION_QUESTS:
                    current_activity = Activity(
                        ActivityType.COMMISSION_QUESTS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"LLooking at the Commission Quests")
            if "story quests" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.STORY_QUESTS
                if current_activity.activity_type != ActivityType.STORY_QUESTS:
                    current_activity = Activity(
                        ActivityType.STORY_QUESTS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Story Quests")
            if "archon quests" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.ARCHON_QUESTS
                if current_activity.activity_type != ActivityType.ARCHON_QUESTS:
                    current_activity = Activity(
                        ActivityType.ARCHON_QUESTS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Archon Quests")
            if "progress" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.IN_PROGRESS
                if current_activity.activity_type != ActivityType.IN_PROGRESS:
                    current_activity = Activity(
                        ActivityType.IN_PROGRESS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at their Current Quests")
            if "hangout event" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.HANGOUT_EVENT
                if current_activity.activity_type != ActivityType.HANGOUT_EVENT:
                    current_activity = Activity(
                        ActivityType.HANGOUT_EVENT, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Hangout Events")
            if "auto" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.CUTSCENE
                if current_activity.activity_type != ActivityType.CUTSCENE:
                    current_activity = Activity(
                        ActivityType.CUTSCENE, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Currently in a Cutscene")
            if "playing" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.CUTSCENE
                if current_activity.activity_type != ActivityType.CUTSCENE:
                    current_activity = Activity(
                        ActivityType.CUTSCENE, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Currently in a Cutscene")
            if "all" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.TUTORIAL_ALL
                if current_activity.activity_type != ActivityType.TUTORIAL_ALL:
                    current_activity = Activity(
                        ActivityType.TUTORIAL_ALL, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at All the Tutorials")
            if "elements" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.TUTORIAL_ELEMENTS
                if current_activity.activity_type != ActivityType.TUTORIAL_ELEMENTS:
                    current_activity = Activity(
                        ActivityType.TUTORIAL_ELEMENTS, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Element Tutorials")
            if "enemies" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.TUTORIAL_ENEMIES
                if current_activity.activity_type != ActivityType.TUTORIAL_ENEMIES:
                    current_activity = Activity(
                        ActivityType.TUTORIAL_ENEMIES, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Enemy Tutorials")
            if "system" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.TUTORIAL_SYSTEM
                if current_activity.activity_type != ActivityType.TUTORIAL_SYSTEM:
                    current_activity = Activity(
                        ActivityType.TUTORIAL_SYSTEM, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the System Tutorials")
            if "adventure" in party_text.lower():
                curr_game_paused = False
                inactive_detection_cooldown = INACTIVE_COOLDOWN
                inactive_detection_mode = ActivityType.TUTORIAL_ADVENTURE
                if current_activity.activity_type != ActivityType.TUTORIAL_ADVENTURE:
                    current_activity = Activity(
                        ActivityType.TUTORIAL_ADVENTURE, prev_non_idle_activity
                    )
                    reload_party_flag = True
                    print(f"Looking at the Adventure Tutorials")
